<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tpp.threat_perception_platform.dao.BaseLineResultMapper">

    <resultMap id="BaseResultMap" type="com.tpp.threat_perception_platform.pojo.BaseLineResult">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="mac" column="mac" jdbcType="VARCHAR"/>
            <result property="policyName" column="policy_name" jdbcType="VARCHAR"/>
            <result property="qualification" column="qualification" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="time" column="time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,mac,policy_name,
        qualification,description,time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from base_line_result
        where  id = #{id,jdbcType=INTEGER} 
    </select>
    <select id="selectAll" resultType="com.tpp.threat_perception_platform.pojo.BaseLineResult">
        select
        <include refid="Base_Column_List" />
        from base_line_result
        <where>
            <if test="start != null and start != '' and end != null and end != ''">
                and time between #{start,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
            </if>
            <if test="keywords != null and keywords != ''">
                and mac like concat('%',#{keywords,jdbcType=VARCHAR},'%') or policy_name like concat('%',#{keywords,jdbcType=VARCHAR},'%') or qualification like concat('%',#{keywords,jdbcType=VARCHAR},'%') or description like concat('%',#{keywords,jdbcType=VARCHAR},'%')
            </if>
        </where>
    </select>
    <select id="findAll" resultType="com.tpp.threat_perception_platform.pojo.BaseLineResult">
        select
        <include refid="Base_Column_List" />
        from base_line_result
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from base_line_result
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <delete id="deleteByMac">
        delete from base_line_result
        where  mac = #{mac,jdbcType=VARCHAR}
    </delete>
    <delete id="delete">
        delete from base_line_result
        where  id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.BaseLineResult" useGeneratedKeys="true">
        insert into base_line_result
        ( id,mac,policy_name
        ,qualification,description,time
        )
        values (#{id,jdbcType=INTEGER},#{mac,jdbcType=VARCHAR},#{policyName,jdbcType=VARCHAR}
        ,#{qualification,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{time,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.BaseLineResult" useGeneratedKeys="true">
        insert into base_line_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="mac != null">mac,</if>
                <if test="policyName != null">policy_name,</if>
                <if test="qualification != null">qualification,</if>
                <if test="description != null">description,</if>
                <if test="time != null">time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="mac != null">#{mac,jdbcType=VARCHAR},</if>
                <if test="policyName != null">#{policyName,jdbcType=VARCHAR},</if>
                <if test="qualification != null">#{qualification,jdbcType=VARCHAR},</if>
                <if test="description != null">#{description,jdbcType=VARCHAR},</if>
                <if test="time != null">#{time,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into base_line_result
        values
        <trim suffixOverrides=",">
            <foreach collection="baseLineResults" item="item" separator=",">
                (#{item.id,jdbcType=INTEGER},#{item.mac,jdbcType=VARCHAR},#{item.policyName,jdbcType=VARCHAR}
                ,#{item.qualification,jdbcType=VARCHAR},#{item.description,jdbcType=VARCHAR},#{item.time,jdbcType=TIMESTAMP}
                )
            </foreach>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tpp.threat_perception_platform.pojo.BaseLineResult">
        update base_line_result
        <set>
                <if test="mac != null">
                    mac = #{mac,jdbcType=VARCHAR},
                </if>
                <if test="policyName != null">
                    policy_name = #{policyName,jdbcType=VARCHAR},
                </if>
                <if test="qualification != null">
                    qualification = #{qualification,jdbcType=VARCHAR},
                </if>
                <if test="description != null">
                    description = #{description,jdbcType=VARCHAR},
                </if>
                <if test="time != null">
                    time = #{time,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tpp.threat_perception_platform.pojo.BaseLineResult">
        update base_line_result
        set 
            mac =  #{mac,jdbcType=VARCHAR},
            policy_name =  #{policyName,jdbcType=VARCHAR},
            qualification =  #{qualification,jdbcType=VARCHAR},
            description =  #{description,jdbcType=VARCHAR},
            time =  #{time,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
