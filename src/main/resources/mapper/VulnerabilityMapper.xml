<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tpp.threat_perception_platform.dao.VulnerabilityMapper">

    <resultMap id="BaseResultMap" type="com.tpp.threat_perception_platform.pojo.Vulnerability">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="vulName" column="vul_name" jdbcType="VARCHAR"/>
            <result property="vulDesc" column="vul_desc" jdbcType="VARCHAR"/>
            <result property="vulLevel" column="vul_level" jdbcType="INTEGER"/>
            <result property="vulRequestType" column="vul_request_type" jdbcType="VARCHAR"/>
            <result property="vulPath" column="vul_path" jdbcType="VARCHAR"/>
            <result property="payload" column="payload" jdbcType="VARCHAR"/>
            <result property="vulType" column="vul_type" jdbcType="VARCHAR"/>
            <result property="platform" column="platform" jdbcType="VARCHAR"/>
            <result property="date" column="date" jdbcType="TIMESTAMP"/>
            <result property="author" column="author" jdbcType="VARCHAR"/>
            <result property="vulFlag" column="vul_flag" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.tpp.threat_perception_platform.pojo.Vulnerability">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="vulName" column="vul_name" jdbcType="VARCHAR"/>
        <result property="vulDesc" column="vul_desc" jdbcType="VARCHAR"/>
        <result property="vulLevel" column="vul_level" jdbcType="INTEGER"/>
        <result property="vulRequestType" column="vul_request_type" jdbcType="VARCHAR"/>
        <result property="vulPath" column="vul_path" jdbcType="VARCHAR"/>
        <result property="payload" column="payload" jdbcType="VARCHAR"/>
        <result property="vulType" column="vul_type" jdbcType="VARCHAR"/>
        <result property="platform" column="platform" jdbcType="VARCHAR"/>
        <result property="date" column="date" jdbcType="TIMESTAMP"/>
        <result property="author" column="author" jdbcType="VARCHAR"/>
        <result property="vulFlag" column="vul_flag" jdbcType="VARCHAR"/>

        <collection property="userVulnerabilities" column="id" ofType="com.tpp.threat_perception_platform.pojo.UserVulnerability"
                    select="com.tpp.threat_perception_platform.dao.UserVulnerabilityMapper.selectByVulId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,vul_name,vul_desc,
        vul_level,vul_request_type,vul_path,
        payload,vul_type,platform,
        date,author,vul_flag
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from vulnerability
        where  id = #{id,jdbcType=INTEGER} 
    </select>
    <select id="findAll" resultType="com.tpp.threat_perception_platform.pojo.Vulnerability">
        select
        <include refid="Base_Column_List" />
        from vulnerability
    </select>
    <select id="selectAll" resultMap="BaseResultMap2">
        select
        <include refid="Base_Column_List" />
        from vulnerability
        <where>
            <if test="keywords != null and keywords != ''">
                and vul_name like concat('%',#{keywords},'%') or vul_desc like concat('%',#{keywords},'%')
                or vul_type like concat('%',#{keywords},'%') or vul_request_type like concat('%',#{keywords},'%')
            </if>
            <if test="start != null and start != '' and end != null and end != ''">
                and date between #{start} and #{end}
            </if>
        </where>
        order by id asc
    </select>
    <select id="selectById" resultMap="BaseResultMap2">
        select
        <include refid="Base_Column_List" />
        from vulnerability
        where  id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByVulName" resultType="com.tpp.threat_perception_platform.pojo.Vulnerability">
        select
        <include refid="Base_Column_List" />
        from vulnerability
        where  vul_name = #{vulName,jdbcType=VARCHAR}
    </select>
    <select id="selectAllVulnerabilities" resultMap="BaseResultMap2">
        select
        <include refid="Base_Column_List" />
        from vulnerability
        order by id asc
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from vulnerability
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <delete id="delete">
        delete from vulnerability
        where  id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.Vulnerability" useGeneratedKeys="true">
        insert into vulnerability
        ( id,vul_name,vul_desc
        ,vul_level,vul_request_type,vul_path
        ,payload,vul_type,platform
        ,date,author,vul_flag
        )
        values (#{id,jdbcType=INTEGER},#{vulName,jdbcType=VARCHAR},#{vulDesc,jdbcType=VARCHAR}
        ,#{vulLevel,jdbcType=INTEGER},#{vulRequestType,jdbcType=VARCHAR},#{vulPath,jdbcType=VARCHAR}
        ,#{payload,jdbcType=VARCHAR},#{vulType,jdbcType=VARCHAR},#{platform,jdbcType=VARCHAR}
        ,#{date,jdbcType=TIMESTAMP},#{author,jdbcType=VARCHAR},#{vulFlag,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.Vulnerability" useGeneratedKeys="true">
        insert into vulnerability
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="vulName != null">vul_name,</if>
                <if test="vulDesc != null">vul_desc,</if>
                <if test="vulLevel != null">vul_level,</if>
                <if test="vulRequestType != null">vul_request_type,</if>
                <if test="vulPath != null">vul_path,</if>
                <if test="payload != null">payload,</if>
                <if test="vulType != null">vul_type,</if>
                <if test="platform != null">platform,</if>
                <if test="date != null">date,</if>
                <if test="author != null">author,</if>
                <if test="vulFlag != null">vul_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="vulName != null">#{vulName,jdbcType=VARCHAR},</if>
                <if test="vulDesc != null">#{vulDesc,jdbcType=VARCHAR},</if>
                <if test="vulLevel != null">#{vulLevel,jdbcType=INTEGER},</if>
                <if test="vulRequestType != null">#{vulRequestType,jdbcType=VARCHAR},</if>
                <if test="vulPath != null">#{vulPath,jdbcType=VARCHAR},</if>
                <if test="payload != null">#{payload,jdbcType=VARCHAR},</if>
                <if test="vulType != null">#{vulType,jdbcType=VARCHAR},</if>
                <if test="platform != null">#{platform,jdbcType=VARCHAR},</if>
                <if test="date != null">#{date,jdbcType=TIMESTAMP},</if>
                <if test="author != null">#{author,jdbcType=VARCHAR},</if>
                <if test="vulFlag != null">#{vulFlag,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tpp.threat_perception_platform.pojo.Vulnerability">
        update vulnerability
        <set>
                <if test="vulName != null">
                    vul_name = #{vulName,jdbcType=VARCHAR},
                </if>
                <if test="vulDesc != null">
                    vul_desc = #{vulDesc,jdbcType=VARCHAR},
                </if>
                <if test="vulLevel != null">
                    vul_level = #{vulLevel,jdbcType=INTEGER},
                </if>
                <if test="vulRequestType != null">
                    vul_request_type = #{vulRequestType,jdbcType=VARCHAR},
                </if>
                <if test="vulPath != null">
                    vul_path = #{vulPath,jdbcType=VARCHAR},
                </if>
                <if test="payload != null">
                    payload = #{payload,jdbcType=VARCHAR},
                </if>
                <if test="vulType != null">
                    vul_type = #{vulType,jdbcType=VARCHAR},
                </if>
                <if test="platform != null">
                    platform = #{platform,jdbcType=VARCHAR},
                </if>
                <if test="date != null">
                    date = #{date,jdbcType=TIMESTAMP},
                </if>
                <if test="author != null">
                    author = #{author,jdbcType=VARCHAR},
                </if>
                <if test="vulFlag != null">
                    vul_flag = #{vulFlag,jdbcType=VARCHAR},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tpp.threat_perception_platform.pojo.Vulnerability">
        update vulnerability
        set 
            vul_name =  #{vulName,jdbcType=VARCHAR},
            vul_desc =  #{vulDesc,jdbcType=VARCHAR},
            vul_level =  #{vulLevel,jdbcType=INTEGER},
            vul_request_type =  #{vulRequestType,jdbcType=VARCHAR},
            vul_path =  #{vulPath,jdbcType=VARCHAR},
            payload =  #{payload,jdbcType=VARCHAR},
            vul_type =  #{vulType,jdbcType=VARCHAR},
            platform =  #{platform,jdbcType=VARCHAR},
            date =  #{date,jdbcType=TIMESTAMP},
            author =  #{author,jdbcType=VARCHAR},
            vul_flag =  #{vulFlag,jdbcType=VARCHAR}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
